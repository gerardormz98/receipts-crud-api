// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimpleCrudAPI.Models;

namespace SimpleCrudAPI.Migrations
{
    [DbContext(typeof(SimpleCrudDBContext))]
    [Migration("20210410061212_SeedInitialData")]
    partial class SeedInitialData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.4");

            modelBuilder.Entity("SimpleCrudAPI.Models.Receipt", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<string>("Comments")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("SupplierID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("SupplierID");

                    b.HasIndex("UserID");

                    b.ToTable("Receipts");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Amount = 1000m,
                            Comments = "First Receipt!",
                            Date = new DateTime(2021, 4, 10, 1, 12, 12, 271, DateTimeKind.Local).AddTicks(9878),
                            SupplierID = 1,
                            UserID = 1
                        });
                });

            modelBuilder.Entity("SimpleCrudAPI.Models.Supplier", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Fake Supplier #1",
                            Phone = "123456789"
                        });
                });

            modelBuilder.Entity("SimpleCrudAPI.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Email = "admin@test.com",
                            IsAdmin = true
                        });
                });

            modelBuilder.Entity("SimpleCrudAPI.Models.Receipt", b =>
                {
                    b.HasOne("SimpleCrudAPI.Models.Supplier", "Supplier")
                        .WithMany("Receipt")
                        .HasForeignKey("SupplierID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimpleCrudAPI.Models.User", "User")
                        .WithMany("Receipt")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SimpleCrudAPI.Models.Supplier", b =>
                {
                    b.Navigation("Receipt");
                });

            modelBuilder.Entity("SimpleCrudAPI.Models.User", b =>
                {
                    b.Navigation("Receipt");
                });
#pragma warning restore 612, 618
        }
    }
}
